#
# Copyright (C) 1999-2006 Thorsten Kukuk <kukuk@thkukuk.de>
#
dnl Process this file with autoconf to produce a configure script.
AC_INIT(ypserv, 2.19, kukuk@linux-nis.org)
AM_INIT_AUTOMAKE
AC_CONFIG_SRCDIR([ypserv/ypserv.c])
AM_CONFIG_HEADER(config.h)
AC_PREFIX_DEFAULT(/usr)

AC_SUBST(PACKAGE)
AC_SUBST(VERSION)

dnl Some hacks...
test "${prefix}" = "NONE" && prefix="/usr"
if test ${prefix} = '/usr'
then
dnl If we use /usr as prefix, use /etc for ypserv.conf
	if test ${sysconfdir} = '${prefix}/etc'
	then
	   sysconfdir="/etc"
	fi
dnl If we use /usr as prefix, use /usr/share/man for manual pages
	if test ${mandir} = '${prefix}/man'
	then
	   mandir='${prefix}/share/man'
	fi
fi
dnl Change libexec to lib/yp
if test ${libexecdir} = '${exec_prefix}/libexec'
then
  libexecdir='${exec_prefix}/lib/yp'
  if test "${exec_prefix}" = "NONE"
  then
    YPBINDIR=/usr/lib/yp
  else
    YPBINDIR=${exec_prefix}/lib/yp
  fi
else
  YPBINDIR=${libexecdir}
fi
AC_SUBST(YPBINDIR)

dnl Location of the NIS maps.  default: /var/yp
AC_ARG_ENABLE([ypmapdir],
       AS_HELP_STRING([--enable-ypmapdir=path],
		[Location of NIS maps (default=/var/yp)]),
              YPMAPDIR=$enableval, YPMAPDIR=/var/yp)
AC_SUBST(YPMAPDIR)


if test ${sbindir} = '${exec_prefix}/sbin'
then
  if test "${exec_prefix}" = "NONE"
  then
    SBINDIR=/usr/sbin
  else
    SBINDIR=${exec_prefix}/sbin
  fi
else
  SBINDIR=${sbindir}
fi
AC_SUBST(SBINDIR)

dnl Checks for programs.
AC_PROG_CC
AC_ISC_POSIX
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_MAKE_SET
AC_PROG_RANLIB

if eval "test x$GCC = xyes"; then
  for flag in \
      -pedantic \
      -W \
      -Wall \
      -Wbad-function-cast \
      -Wcast-align \
      -Wcast-qual \
      -Wmissing-declarations \
      -Wmissing-prototypes \
      -Wpointer-arith \
      -Wreturn-type \
      -Wstrict-prototypes
  do
    JAPHAR_GREP_CFLAGS($flag, [ CFLAGS="$CFLAGS $flag" ])
  done
fi

AC_ARG_ENABLE(pie,AS_HELP_STRING([--disable-pie],
			[Disable position-independent executeables (PIE)]),
	USE_PIE=$enableval, USE_PIE=yes)

AC_CACHE_CHECK(for -fpie, libc_cv_fpie, [dnl
  cat > conftest.c <<EOF
int foo;
main () { return 0;}
EOF
  if test "$USE_PIE" = "yes" &&
	AC_TRY_COMMAND([${CC-cc} $CFLAGS $CPPFLAGS $LDFLAGS -pie -fpie
                              -o conftest conftest.c 1>&AS_MESSAGE_LOG_FD])
  then
    libc_cv_fpie=yes
    PIE_CFLAGS="-fpie"
    PIE_LDFLAGS="-pie"
  else
    libc_cv_fpie=no
    PIE_CFLAGS=""
    PIE_LDFLAGS=""
  fi
  rm -f conftest*])
AC_SUBST(libc_cv_fpie)
AC_SUBST(PIE_CFLAGS)
AC_SUBST(PIE_LDFLAGS)

AM_WITH_DMALLOC
AM_WITH_EFENCE

dnl Check for big or little endian system
AC_C_BIGENDIAN
dnl Check for 64bit systems
AC_CHECK_SIZEOF(long)

dnl Search a awk program
AC_PATH_PROGS(AWK, mawk gawk nawk awk, ERROR)
if test $AWK = ERROR
then
   echo " "
   echo "ERROR: You must have at last one of the following programs:"
   echo "       mawk, gawk, nawk or awk !"
   echo " "
   exit
fi

dnl Search the bash
AC_PATH_PROGS(BASH, bash /sbin/sh, /bin/sh)

dnl Search make
AC_PATH_PROGS(MAKE, gmake make, "", $PATH:/usr/ccs/bin:/usr/local/bin)
if test x$MAKE = x
then
   echo " "
   echo "Warning: No make on this system?"
   echo " "
   exit
fi
AC_SUBST(MAKE)

dnl Check for aliases path
AC_PATH_PROG(ALIASES, aliases, /etc/mail/aliases, /etc/mail:/etc)



dnl Should we use a gethostbyname after gethostname to use FQDN ? default yes
AC_ARG_ENABLE(fqdn, AS_HELP_STRING([--disable-fqdn],
			[Always use FQDN (default=yes)]),
              USE_PARAM_FQDN=$enableval, USE_PARAM_FQDN=yes)
if test "$USE_PARAM_FQDN" = "no"; then
  USE_FQDN=0
else
  USE_FQDN=1
fi
AC_SUBST(USE_FQDN)

dnl Should we allow root to change a password with yppasswd ? default: yes
AC_ARG_ENABLE([checkroot],AS_HELP_STRING([--disable-checkroot],
	[Disable check for root password (default=yes)]),
              CHECKROOT=$enableval, CHECKROOT=yes)
AC_SUBST(CHECKROOT)

AC_CHECK_LIB(gdbm,gdbm_open,LIBDBM="-lgdbm",LIBDBM="")
if test x"" != x"${LIBDBM}"
then
	AC_DEFINE(HAVE_LIBGDBM, 1, [Use gdbm library as database])
	libdb_parameter=yes
else
	AC_CHECK_FUNCS(dbm_open)
	if test x$ac_cv_func_dbm_open = xyes
	then
		AC_DEFINE(HAVE_NDBM, 1, [Use ndbm library as database])
		libdb_parameter=yes
	fi
fi
AC_SUBST(LIBDBM)

if test x$libdb_parameter != xyes
then
  echo "

 You need the GNU GDBM or the Solaris NDBM functions for this package !"
  echo ""
  echo ""
  exit
fi

AC_CHECK_LIB(xcrypt,crypt,LIBCRYPT="-lxcrypt",LIBCRYPT="")
if test -z "$LIBCRYPT" ; then
  AC_CHECK_LIB(crypt,crypt,LIBCRYPT="-lcrypt",LIBCRYPT="")
  AC_CHECK_HEADERS(crypt.h)
else
  AC_CHECK_HEADERS(xcrypt.h crypt.h)
fi
AC_SUBST(LIBCRYPT)

USE_SLP=0
AC_CHECK_LIB(slp,SLPReg,LIBSLP="-lslp",LIBSLP="")
AC_SUBST(LIBSLP)
if test -n "$LIBSLP" ; then
	AC_CHECK_HEADERS(slp.h)
        if test "$ac_cv_header_slp_h" = yes; then
	  USE_SLP=1
	fi
fi
AC_SUBST(USE_SLP)

AC_CHECK_FUNCS(getrpcport)
if test "$ac_cv_func_getrpcport" = no; then
	AC_CHECK_LIB([rpcsvc], [getrpcport],
	             [ac_cv_func_getrpcport=yes; LIBS="-lrpcsvc $LIBS"])
fi

AC_CHECK_LIB(nsl,gethostbyname)
AC_CHECK_LIB(socket,socket)
AC_CHECK_LIB(resolv, res_gethostbyname, RESOLV="-lresolv", RESOLV="")
if test x$RESOLV != x
then
	AC_DEFINE(HAVE_RES_GETHOSTBYNAME, 1, [Define if you have the res_gethostbyname function.])
else
	AC_CHECK_LIB(resolv+, gethostbyname, RESOLV="-lresolv+", RESOLV="")
fi
AC_SUBST(RESOLV)

dnl Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(fcntl.h paths.h sys/file.h sys/time.h syslog.h unistd.h)
AC_CHECK_HEADERS(getopt.h shadow.h rpc/clnt_soc.h rpc/svc_soc.h)
AC_CHECK_HEADERS(netinet/in.h alloca.h)
AC_CHECK_TYPE(in_addr_t, ,[AC_DEFINE(in_addr_t,int,[Define to int if you don't have in_addr_t])],[#include <netinet/in.h>])

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_C___ATTRIBUTE__
TYPE_SOCKLEN_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_HEADER_TIME

dnl Checks if resultproc_t has been defined
AC_MSG_CHECKING(for resultproc_t in rpc/clnt.h)
AC_EGREP_HEADER(resultproc_t,rpc/clnt.h,\
	AC_DEFINE(HAVE_RESULTPROC_T, 1, [Define if the systems has the resultproc_t type.]) AC_MSG_RESULT(yes),\
	AC_MSG_RESULT(no))
AC_MSG_CHECKING(for resultproc_t in rpc/pmap_clnt.h)
AC_EGREP_HEADER(resultproc_t,rpc/pmap_clnt.h,\
	AC_DEFINE(HAVE_RESULTPROC_T) AC_MSG_RESULT(yes),\
	AC_MSG_RESULT(no))

dnl Checks for library functions.
AC_FUNC_MEMCMP
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(setenv putenv)
AC_CHECK_FUNCS(fgetpwent putpwent fgetgrent getspnam)
AC_CHECK_FUNCS(inet_aton inet_pton vsyslog lckpwdf)
AC_CHECK_FUNCS(strdup strndup strerror strstr strsep stpcpy)
AC_CHECK_FUNCS(snprintf asprintf)
AC_CHECK_FUNCS(gethostname gettimeofday select socket uname getopt_long)
AC_CHECK_FUNCS(_rpc_dtablesize getdtablesize)
AC_CHECK_FUNCS(svc_getcaller svc_getrpccaller getline getdelim)
AC_CHECK_FUNCS(xdr_domainname xdr_ypxfrstat xdr_ypresp_xfr xdr_ypreq_xfr)
AC_CHECK_FUNCS(xdr_ypmap_parms xdr_ypreq_nokey xdr_ypresp_master xdr_mapname)
AC_CHECK_FUNCS(xdr_peername xdr_ypstat xdr_ypbind_binding xdr_yppushresp_xfr)
AC_CHECK_FUNCS(xdr_yppush_status)

AC_OUTPUT(lib/Makefile etc/Makefile ypserv/Makefile ypserv/ypserv.8
	ypxfr/Makefile ypxfr/ypxfr.8 yppush/Makefile yppush/yppush.8
	makedbm/Makefile makedbm/makedbm.8
	revnetgroup/Makefile revnetgroup/revnetgroup.8 Makefile
	mknetid/Makefile mknetid/mknetid.8 rpc.ypxfrd/Makefile
	rpc.ypxfrd/rpc.ypxfrd.8 rpc.ypxfrd/ypxfrd.8 rpc.yppasswdd/Makefile
	rpc.yppasswdd/yppasswdd.8 rpc.yppasswdd/rpc.yppasswdd.8
	yphelper/Makefile scripts/Makefile scripts/ypxfr_1perhour
	scripts/ypxfr_1perday scripts/ypxfr_2perday scripts/pwupdate
	scripts/pwupdate.8 scripts/create_printcap scripts/match_printcap
	scripts/ypinit scripts/ypinit.8 scripts/ypMakefile)

echo "
Configuration:

  Source code location:   ${srcdir}
  Compiler:               ${CC}
  Compiler flags:         ${CFLAGS}
  Preprocessor:		  ${CPP}
  Preprocessor flags:     ${CPPFLAGS}
  Libraries:		  ${LIBS} ${LIBDBM} ${LIBCRYPT}
  Awk:                    ${AWK}
  Shell:		  ${BASH}
  NIS map dir:            ${YPMAPDIR}
  Install path prefix:    ${prefix}"
if test ${sysconfdir} != '${prefix}/etc'
then
  echo "  Install ypserv.conf in:  ${sysconfdir}"
else
  echo "  Install ypserv.conf in:  ${prefix}/etc"
fi
  echo "  Allow root password:     ${CHECKROOT}"
  echo "  Use FQDN as master name: ${USE_FQDN}"
echo ""
